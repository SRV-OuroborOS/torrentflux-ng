<link rel="stylesheet" type="text/css" media="screen" href="css/ui-lightness/jquery-ui-1.10.3.custom.css" />
<link rel="stylesheet" type="text/css" media="screen" href="css/ui.jqgrid.css" />
<script src="js/jquery-1.9.0.min.js" type="text/javascript"></script>
<script src="js/i18n/grid.locale-en.js" type="text/javascript"></script>
<script src="js/jquery.jqGrid.min.js" type="text/javascript"></script>

<table id="list1"></table>
<div id="pager1"></div>
...
<script type="text/javascript">

	jQuery().ready(function (){
		jQuery("#list1").jqGrid({
			url:'transferlistxml.php',
 			datatype: "xml",
 			colNames:['Details', 'Directory', 'Name', 'Up rate', 'Down rate', 'Owner', 'Percentage', 'Status', 'Size', 'Est Time', 'Actions'],
			colModel:[
				{ name:'details', index:'details', width:15, formatter: formatTransferdetails, xmlmap:"transfer>details" },
				{ name:'dir',index:'dir', width:15, formatter: formatDirectory, xmlmap:"transfer>path" },
				{ name:'name',index:'name', width:100, xmlmap:"transfer>name" },
				{ name:'up',index:'up', width:40, sorttype:'integer', formatter: formatRates, xmlmap:"transfer>uprate" },
				{ name:'down',index:'down', width:40, sorttype:'integer', formatter: formatRates, xmlmap:"transfer>downrate" },
				{ name:'owner',index:'owner', width:20, formatter:formatOwner, xmlmap:"transfer>owner" },
				{ name:'percentage',index:'percentage', width:30, sorttype:'integer', formatter: formatPercentage, xmlmap:"transfer>percentage" },
				{ name:'status', index:'status', width:50, xmlmap:"transfer>status" },
				{ name:'size', index:'size', width:50, sorttype:'integer', formatter: formatReadableSize, xmlmap:"transfer>size" },
				{ name:'esttime', index:'esttime', width:50, xmlmap:"transfer>eta" },
				{ name:'actions', index:'actions', width:50, xmlmap:"transfer>actions", formatter: formatActions, sortable:false }
			],
			xmlReader: { 
      			root:"transfers", 
      			row:"transfer",
			    page:"transferslist>currentpage",
				total:"transferslist>totalpages",
 				records:"transferslist>totalrecords",
				repeatitems:false,
 				id : "url_entry"
 			},
			height: 500,
			rowNum:25,
			autowidth: true,
			rowList:[25,50,75],
			pager: jQuery('#pager1'), 
			sortname: 'id',
			viewrecords: true,
			sortorder: "desc",
			loadonce: true,
			caption: "Transfers"
		}).navGrid( '#pager1', {edit:false,add:false,del:false} )
	});

	function formatOwner(cellValue, options, rowObject) {
		var output = "";
		if(cellValue) {
			output = "<img src=\"images/checked.png\">";
		}
		return output;
	}
	
	function formatActions(cellValue, options, rowObject) {
		actions = $(rowObject).find("actions");
		var output = "";
		$('action', actions).each(
			function(i) {
				actionName = $(this).find("name").text();
				image = $(this).find("image").text();
				script = $(this).find("script").text();
				
				output += "<img height=16px src=\"" + image + "\" title=\"" + actionName + "\" onclick=\"javascript:" + script + "\"/>";
			}
		);
		
		return output;
	}
	
	function formatImage(cellValue, options, rowObject) {
	    var imageHtml = "";
	    if(cellValue){
	        if(cellValue.indexOf("checked") == -1){
	            imageHtml = '<img src="' + cellValue + '" title="Owner">';    
	        }else{
	            imageHtml = '<img src="' + cellValue + '" title="">';
	        }
	    }
	    return imageHtml;
	}

	function formatPercentage(cellValue, options, rowObject) {
	    return cellValue + '%';
	}

	function formatSpeed(cellValue) {
		return formatSize(cellValue) + '/s';
	}
	
	function formatRates(cellValue, options, rowObject) {
		var percentage = $(rowObject).find("percentage").text();
		var trstatus = $(rowObject).find("status").text();
		var output = "";
		if ( trstatus != "Stopped" && trstatus != "Done" ) {
			output = formatSpeed(cellValue);
		}
		return output;
	}

	function formatSize(size, standard) {
	    if (standard) { 
			standard = standard.toLowerCase();
	    }

	    var n = 0, 
		base = standard == 'si' ? 1000 : 1024, 
		prefixes = ' KMGTPEZY';

	    if (size < 1) {
		return 0;
	    }
	    else if (size >= base) {
		n = Math.floor( Math.log(size) / Math.log(base) );

		if (n >= prefixes.length) {
		    return 'N/A';
		}

		size = ( size / Math.pow(base, n) ).toFixed(2) * 1 + ' ';
	    }

	    return size + prefixes[n] + ( n && standard == 'iec' ? 'i' : '' ) + 'B';
	}

	function formatReadableSize(cellValue, options, rowObject) {
	    var sizeHtml = "";
	    if(cellValue){
	            sizeHtml = formatSize(cellValue);
	    }
	    return sizeHtml;
	}
	
	function unformatImage(cellValue, options, cellObject) {
	    return $(cellObject.html()).attr("originalValue");
	}
	
	function formatDirectory(cellValue, options, rowObject) {
	    var directoryHtml = "";
		if(cellValue){
	    	directoryHtml = '<a href="dir.php?dir=' + cellValue + '"><img src="themes/<tmpl_var name="theme">/images/dir/folder.png" title="Directory"></a>';
		}
	    return directoryHtml;
	}
	
	function formatTransferdetails(cellValue, options, rowObject) {
	    var transferdetailsHtml = "";
		if(cellValue){
			transferdetailsHtml = '<a href="#" onclick="' + cellValue + '"><img src="themes/<tmpl_var name="theme">/images/dir/dlinfo.png" alt="" title="Details" /></a>';
		}
	    return transferdetailsHtml;
	}
	
</script>
